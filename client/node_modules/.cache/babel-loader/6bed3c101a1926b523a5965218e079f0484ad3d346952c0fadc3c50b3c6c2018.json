{"ast":null,"code":"var _jsxFileName = \"/home/the00b/Escritorio/DOMINIOS/domain-checker/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Importar iconos\nimport { FaSearch, FaFileAlt, FaFileCsv, FaExternalLinkAlt, FaGithub, FaCalendarAlt, FaGlobe, FaLaptopCode, FaRegCheckCircle, FaRegTimesCircle, FaInfoCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [expanded, setExpanded] = useState(false);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setLoading(true);\n    setError('');\n    setResults([]);\n    setExpanded(false);\n    try {\n      // First, get domain suggestions\n      const searchResponse = await axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(query)}`);\n      if (searchResponse.data.results && searchResponse.data.results.length > 0) {\n        // Get the status of each domain\n        const domains = searchResponse.data.results.map(result => result.domain);\n\n        // Create an array of promises for domain status checks\n        const statusPromises = domains.map(domain => axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`));\n\n        // Wait for all status checks to complete\n        const statusResponses = await Promise.all(statusPromises);\n\n        // Combine results with status information\n        const combinedResults = searchResponse.data.results.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n        setResults(combinedResults);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to search domains. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDomainStatusClass = summary => {\n    if (!summary) return '';\n    if (summary === 'inactive') return 'available';\n    return 'unavailable';\n  };\n  const getDomainStatusText = summary => {\n    if (!summary) return 'Unknown';\n    if (summary === 'inactive') return 'Available';\n    return 'Unavailable';\n  };\n\n  // Función para construir las URLs de búsqueda para diferentes motores\n  const getSearchUrls = domain => {\n    const searchQuery = `comprar dominio ${domain}`;\n    return {\n      google: `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`,\n      bing: `https://www.bing.com/search?q=${encodeURIComponent(searchQuery)}`,\n      duckduckgo: `https://duckduckgo.com/?q=${encodeURIComponent(searchQuery)}`,\n      brave: `https://search.brave.com/search?q=${encodeURIComponent(searchQuery)}`\n    };\n  };\n\n  // Función para exportar resultados a un archivo TXT\n  const exportToTXT = () => {\n    if (!results.length) return;\n    let content = 'RESULTADOS DE BÚSQUEDA DE DOMINIOS\\n';\n    content += '==============================\\n\\n';\n    content += `Búsqueda: ${query}\\n`;\n    content += `Fecha: ${new Date().toLocaleString()}\\n\\n`;\n    content += 'DOMINIOS:\\n';\n    results.forEach(result => {\n      content += `\\n- ${result.domain}`;\n      content += `\\n  Estado: ${getDomainStatusText(result.summary)}`;\n      content += '\\n';\n    });\n    const blob = new Blob([content], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para exportar resultados a un archivo CSV\n  const exportToCSV = () => {\n    if (!results.length) return;\n    let content = 'Dominio,Estado,Tipo\\n';\n    results.forEach(result => {\n      content += `${result.domain},${getDomainStatusText(result.summary)},${result.zone}\\n`;\n    });\n    const blob = new Blob([content], {\n      type: 'text/csv;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para expandir la búsqueda con más TLDs\n  const handleExpandSearch = async () => {\n    if (loading || !query.trim()) return;\n    setLoading(true);\n    setError('');\n    try {\n      // Lista de TLDs comunes para agregar a la búsqueda\n      const commonTLDs = ['com', 'net', 'org', 'io', 'co', 'app', 'dev', 'tech', 'ai', 'shop', 'store'];\n\n      // Genera consultas adicionales basadas en el término original\n      const queryBase = query.trim().replace(/\\s+/g, '');\n      const additionalQueries = [...commonTLDs.map(tld => `${queryBase}.${tld}`), queryBase];\n\n      // Hacer búsquedas para cada variante\n      const searchPromises = additionalQueries.map(q => axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(q)}`));\n      const searchResults = await Promise.all(searchPromises);\n\n      // Extraer dominios únicos de todas las búsquedas\n      const allDomains = new Set();\n      const combinedResults = [];\n      searchResults.forEach(response => {\n        if (response.data.results && response.data.results.length > 0) {\n          response.data.results.forEach(result => {\n            if (!allDomains.has(result.domain)) {\n              allDomains.add(result.domain);\n              combinedResults.push(result);\n            }\n          });\n        }\n      });\n\n      // Verificar el estado de cada dominio\n      if (combinedResults.length > 0) {\n        const domains = combinedResults.map(result => result.domain);\n        const statusPromises = domains.map(domain => axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`));\n        const statusResponses = await Promise.all(statusPromises);\n        const newResults = combinedResults.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n\n        // Combinar con resultados existentes y eliminar duplicados\n        const combinedDomains = new Set(results.map(r => r.domain));\n        const filteredNewResults = newResults.filter(r => !combinedDomains.has(r.domain));\n        setResults([...results, ...filteredNewResults]);\n        setExpanded(true);\n      }\n    } catch (err) {\n      console.error('Error expanding search:', err);\n      setError('Failed to expand domain search. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Domain Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Estaba cansado de entrar en buscadores de dominios y me cree uno propio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {\n          className: \"info-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Busca nombres de dominio y verifica su disponibilidad al instante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-icon\",\n            children: /*#__PURE__*/_jsxDEV(FaGlobe, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Escribe un nombre o palabra clave...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 35\n            }, this), \" Buscar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Buscando dominios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), !loading && results.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToTXT,\n          className: \"export-btn txt\",\n          children: [/*#__PURE__*/_jsxDEV(FaFileAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), \" Exportar TXT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToCSV,\n          className: \"export-btn csv\",\n          children: [/*#__PURE__*/_jsxDEV(FaFileCsv, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), \" Exportar CSV\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), !expanded && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExpandSearch,\n          className: \"export-btn expand\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), \" Listar m\\xE1s dominios\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `domain-item ${getDomainStatusClass(result.summary)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-name\",\n            children: result.domain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `domain-status ${getDomainStatusClass(result.summary)}`,\n              children: [result.summary === 'inactive' ? /*#__PURE__*/_jsxDEV(FaRegCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 52\n              }, this) : /*#__PURE__*/_jsxDEV(FaRegTimesCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 75\n              }, this), \" \", getDomainStatusText(result.summary)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), result.summary === 'inactive' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-buttons\",\n              children: Object.entries(getSearchUrls(result.domain)).map(([engine, url]) => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: `search-button ${engine}`,\n                title: `Buscar en ${engine.charAt(0).toUpperCase() + engine.slice(1)}`,\n                children: /*#__PURE__*/_jsxDEV(FaExternalLinkAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this)\n              }, engine, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"powered-by\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Powered by Domainr API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/686f6c61\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"github-link\",\n          children: [/*#__PURE__*/_jsxDEV(FaGithub, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), \" github.com/686f6c61\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-info\",\n          children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), \" Mayo 2025\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tech-info\",\n          children: [/*#__PURE__*/_jsxDEV(FaLaptopCode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), \" React + Node.js\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ekP3ktEl7pK2G8l5V6q4nZN7gfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","FaSearch","FaFileAlt","FaFileCsv","FaExternalLinkAlt","FaGithub","FaCalendarAlt","FaGlobe","FaLaptopCode","FaRegCheckCircle","FaRegTimesCircle","FaInfoCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","results","setResults","loading","setLoading","error","setError","expanded","setExpanded","handleSearch","e","preventDefault","trim","searchResponse","get","encodeURIComponent","data","length","domains","map","result","domain","statusPromises","statusResponses","Promise","all","combinedResults","index","statusData","status","summary","err","console","getDomainStatusClass","getDomainStatusText","getSearchUrls","searchQuery","google","bing","duckduckgo","brave","exportToTXT","content","Date","toLocaleString","forEach","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","replace","toISOString","split","body","appendChild","click","removeChild","exportToCSV","zone","handleExpandSearch","commonTLDs","queryBase","additionalQueries","tld","searchPromises","q","searchResults","allDomains","Set","response","has","add","push","newResults","combinedDomains","r","filteredNewResults","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","onClick","disabled","Object","entries","engine","rel","title","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/home/the00b/Escritorio/DOMINIOS/domain-checker/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Importar iconos\nimport { FaSearch, FaFileAlt, FaFileCsv, FaExternalLinkAlt, FaGithub, FaCalendarAlt, FaGlobe, FaLaptopCode, FaRegCheckCircle, FaRegTimesCircle, FaInfoCircle } from 'react-icons/fa';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [expanded, setExpanded] = useState(false);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    \n    setLoading(true);\n    setError('');\n    setResults([]);\n    setExpanded(false);\n    \n    try {\n      // First, get domain suggestions\n      const searchResponse = await axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(query)}`);\n      \n      if (searchResponse.data.results && searchResponse.data.results.length > 0) {\n        // Get the status of each domain\n        const domains = searchResponse.data.results.map(result => result.domain);\n        \n        // Create an array of promises for domain status checks\n        const statusPromises = domains.map(domain => \n          axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`)\n        );\n        \n        // Wait for all status checks to complete\n        const statusResponses = await Promise.all(statusPromises);\n        \n        // Combine results with status information\n        const combinedResults = searchResponse.data.results.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n        \n        setResults(combinedResults);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to search domains. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDomainStatusClass = (summary) => {\n    if (!summary) return '';\n    if (summary === 'inactive') return 'available';\n    return 'unavailable';\n  };\n\n  const getDomainStatusText = (summary) => {\n    if (!summary) return 'Unknown';\n    if (summary === 'inactive') return 'Available';\n    return 'Unavailable';\n  };\n\n  // Función para construir las URLs de búsqueda para diferentes motores\n  const getSearchUrls = (domain) => {\n    const searchQuery = `comprar dominio ${domain}`;\n    return {\n      google: `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`,\n      bing: `https://www.bing.com/search?q=${encodeURIComponent(searchQuery)}`,\n      duckduckgo: `https://duckduckgo.com/?q=${encodeURIComponent(searchQuery)}`,\n      brave: `https://search.brave.com/search?q=${encodeURIComponent(searchQuery)}`\n    };\n  };\n\n  // Función para exportar resultados a un archivo TXT\n  const exportToTXT = () => {\n    if (!results.length) return;\n\n    let content = 'RESULTADOS DE BÚSQUEDA DE DOMINIOS\\n';\n    content += '==============================\\n\\n';\n    content += `Búsqueda: ${query}\\n`;\n    content += `Fecha: ${new Date().toLocaleString()}\\n\\n`;\n    content += 'DOMINIOS:\\n';\n    \n    results.forEach(result => {\n      content += `\\n- ${result.domain}`;\n      content += `\\n  Estado: ${getDomainStatusText(result.summary)}`;\n      content += '\\n';\n    });\n    \n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para exportar resultados a un archivo CSV\n  const exportToCSV = () => {\n    if (!results.length) return;\n\n    let content = 'Dominio,Estado,Tipo\\n';\n    \n    results.forEach(result => {\n      content += `${result.domain},${getDomainStatusText(result.summary)},${result.zone}\\n`;\n    });\n    \n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para expandir la búsqueda con más TLDs\n  const handleExpandSearch = async () => {\n    if (loading || !query.trim()) return;\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      // Lista de TLDs comunes para agregar a la búsqueda\n      const commonTLDs = ['com', 'net', 'org', 'io', 'co', 'app', 'dev', 'tech', 'ai', 'shop', 'store'];\n      \n      // Genera consultas adicionales basadas en el término original\n      const queryBase = query.trim().replace(/\\s+/g, '');\n      const additionalQueries = [...commonTLDs.map(tld => `${queryBase}.${tld}`), queryBase];\n      \n      // Hacer búsquedas para cada variante\n      const searchPromises = additionalQueries.map(q => \n        axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(q)}`)\n      );\n      \n      const searchResults = await Promise.all(searchPromises);\n      \n      // Extraer dominios únicos de todas las búsquedas\n      const allDomains = new Set();\n      const combinedResults = [];\n      \n      searchResults.forEach(response => {\n        if (response.data.results && response.data.results.length > 0) {\n          response.data.results.forEach(result => {\n            if (!allDomains.has(result.domain)) {\n              allDomains.add(result.domain);\n              combinedResults.push(result);\n            }\n          });\n        }\n      });\n      \n      // Verificar el estado de cada dominio\n      if (combinedResults.length > 0) {\n        const domains = combinedResults.map(result => result.domain);\n        \n        const statusPromises = domains.map(domain => \n          axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`)\n        );\n        \n        const statusResponses = await Promise.all(statusPromises);\n        \n        const newResults = combinedResults.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n        \n        // Combinar con resultados existentes y eliminar duplicados\n        const combinedDomains = new Set(results.map(r => r.domain));\n        const filteredNewResults = newResults.filter(r => !combinedDomains.has(r.domain));\n        \n        setResults([...results, ...filteredNewResults]);\n        setExpanded(true);\n      }\n    } catch (err) {\n      console.error('Error expanding search:', err);\n      setError('Failed to expand domain search. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Domain Checker</h1>\n        <p>Estaba cansado de entrar en buscadores de dominios y me cree uno propio</p>\n      </div>\n      \n      <div className=\"domain-form\">\n        <div className=\"search-info\">\n          <FaInfoCircle className=\"info-icon\" /> \n          <span>Busca nombres de dominio y verifica su disponibilidad al instante</span>\n        </div>\n        <form onSubmit={handleSearch}>\n          <div className=\"input-group\">\n            <span className=\"input-icon\"><FaGlobe /></span>\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Escribe un nombre o palabra clave...\"\n            />\n            <button type=\"submit\"><FaSearch /> Buscar</button>\n          </div>\n        </form>\n      </div>\n      \n      {loading && <div className=\"loading\">Buscando dominios...</div>}\n      \n      {error && <div className=\"error\">{error}</div>}\n      \n      {!loading && results.length > 0 && (\n        <>\n          <div className=\"export-buttons\">\n            <button onClick={exportToTXT} className=\"export-btn txt\">\n              <FaFileAlt /> Exportar TXT\n            </button>\n            <button onClick={exportToCSV} className=\"export-btn csv\">\n              <FaFileCsv /> Exportar CSV\n            </button>\n            {!expanded && (\n              <button onClick={handleExpandSearch} className=\"export-btn expand\" disabled={loading}>\n                <FaSearch /> Listar más dominios\n              </button>\n            )}\n          </div>\n          <div className=\"results\">\n            {results.map((result, index) => (\n            <div \n              key={index} \n              className={`domain-item ${getDomainStatusClass(result.summary)}`}\n            >\n              <div className=\"domain-name\">{result.domain}</div>\n              <div className=\"domain-actions\">\n                <div className={`domain-status ${getDomainStatusClass(result.summary)}`}>\n                  {result.summary === 'inactive' ? <FaRegCheckCircle /> : <FaRegTimesCircle />} {getDomainStatusText(result.summary)}\n                </div>\n                \n                {result.summary === 'inactive' && (\n                  <div className=\"search-buttons\">\n                    {Object.entries(getSearchUrls(result.domain)).map(([engine, url]) => (\n                      <a \n                        key={engine} \n                        href={url} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className={`search-button ${engine}`}\n                        title={`Buscar en ${engine.charAt(0).toUpperCase() + engine.slice(1)}`}\n                      >\n                        <FaExternalLinkAlt />\n                      </a>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        </>\n      )}\n      \n      <div className=\"powered-by\">\n        <div>Powered by Domainr API</div>\n        <div className=\"author-info\">\n          <a href=\"https://github.com/686f6c61\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n            <FaGithub /> github.com/686f6c61\n          </a>\n          <span className=\"date-info\">\n            <FaCalendarAlt /> Mayo 2025\n          </span>\n          <span className=\"tech-info\">\n            <FaLaptopCode /> React + Node.js\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}