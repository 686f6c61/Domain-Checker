{"ast":null,"code":"var _jsxFileName = \"/home/the00b/Escritorio/DOMINIOS/domain-checker/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Importar iconos\nimport { FaSearch, FaFileAlt, FaFileCsv } from 'react-icons/fa';\nimport { FaGoogle, FaBing } from 'react-icons/fa';\nimport { SiDuckduckgo, SiBrave } from 'react-icons/si';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setLoading(true);\n    setError('');\n    setResults([]);\n    try {\n      // First, get domain suggestions\n      const searchResponse = await axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(query)}`);\n      if (searchResponse.data.results && searchResponse.data.results.length > 0) {\n        // Get the status of each domain\n        const domains = searchResponse.data.results.map(result => result.domain);\n\n        // Create an array of promises for domain status checks\n        const statusPromises = domains.map(domain => axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`));\n\n        // Wait for all status checks to complete\n        const statusResponses = await Promise.all(statusPromises);\n\n        // Combine results with status information\n        const combinedResults = searchResponse.data.results.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n        setResults(combinedResults);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to search domains. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDomainStatusClass = summary => {\n    if (!summary) return '';\n    if (summary === 'inactive') return 'available';\n    return 'unavailable';\n  };\n  const getDomainStatusText = summary => {\n    if (!summary) return 'Unknown';\n    if (summary === 'inactive') return 'Available';\n    return 'Unavailable';\n  };\n\n  // Función para construir las URLs de búsqueda para diferentes motores\n  const getSearchUrls = domain => {\n    const searchQuery = `comprar dominio ${domain}`;\n    return {\n      google: `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`,\n      bing: `https://www.bing.com/search?q=${encodeURIComponent(searchQuery)}`,\n      duckduckgo: `https://duckduckgo.com/?q=${encodeURIComponent(searchQuery)}`,\n      brave: `https://search.brave.com/search?q=${encodeURIComponent(searchQuery)}`\n    };\n  };\n\n  // Función para exportar resultados a un archivo TXT\n  const exportToTXT = () => {\n    if (!results.length) return;\n    let content = 'RESULTADOS DE BÚSQUEDA DE DOMINIOS\\n';\n    content += '==============================\\n\\n';\n    content += `Búsqueda: ${query}\\n`;\n    content += `Fecha: ${new Date().toLocaleString()}\\n\\n`;\n    content += 'DOMINIOS:\\n';\n    results.forEach(result => {\n      content += `\\n- ${result.domain}`;\n      content += `\\n  Estado: ${getDomainStatusText(result.summary)}`;\n      content += '\\n';\n    });\n    const blob = new Blob([content], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para exportar resultados a un archivo CSV\n  const exportToCSV = () => {\n    if (!results.length) return;\n    let content = 'Dominio,Estado,Tipo\\n';\n    results.forEach(result => {\n      content += `${result.domain},${getDomainStatusText(result.summary)},${result.zone}\\n`;\n    });\n    const blob = new Blob([content], {\n      type: 'text/csv;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Domain Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verifica la disponibilidad de dominios en tiempo real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Escribe un nombre o palabra clave...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 35\n            }, this), \" Buscar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Buscando dominios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), !loading && results.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToTXT,\n          className: \"export-btn txt\",\n          children: [/*#__PURE__*/_jsxDEV(FaFileAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), \" Exportar TXT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToCSV,\n          className: \"export-btn csv\",\n          children: [/*#__PURE__*/_jsxDEV(FaFileCsv, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), \" Exportar CSV\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `domain-item ${getDomainStatusClass(result.summary)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-name\",\n            children: result.domain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `domain-status ${getDomainStatusClass(result.summary)}`,\n              children: getDomainStatusText(result.summary)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), result.summary === 'inactive' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-buttons\",\n              children: Object.entries(getSearchUrls(result.domain)).map(([engine, url]) => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: `search-button ${engine}`,\n                title: `Buscar en ${engine.charAt(0).toUpperCase() + engine.slice(1)}`,\n                children: [engine === 'google' && /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 49\n                }, this), engine === 'bing' && /*#__PURE__*/_jsxDEV(FaBing, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 47\n                }, this), engine === 'duckduckgo' && /*#__PURE__*/_jsxDEV(SiDuckduckgo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 53\n                }, this), engine === 'brave' && /*#__PURE__*/_jsxDEV(SiBrave, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 48\n                }, this)]\n              }, engine, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"powered-by\",\n      children: \"Powered by Domainr API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"keW6MEd3NVUzwh/miDGlKiEcnAs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","FaSearch","FaFileAlt","FaFileCsv","FaGoogle","FaBing","SiDuckduckgo","SiBrave","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","query","setQuery","results","setResults","loading","setLoading","error","setError","handleSearch","e","preventDefault","trim","searchResponse","get","encodeURIComponent","data","length","domains","map","result","domain","statusPromises","statusResponses","Promise","all","combinedResults","index","statusData","status","summary","err","console","getDomainStatusClass","getDomainStatusText","getSearchUrls","searchQuery","google","bing","duckduckgo","brave","exportToTXT","content","Date","toLocaleString","forEach","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","replace","toISOString","split","body","appendChild","click","removeChild","exportToCSV","zone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","onClick","Object","entries","engine","rel","title","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/home/the00b/Escritorio/DOMINIOS/domain-checker/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Importar iconos\nimport { FaSearch, FaFileAlt, FaFileCsv } from 'react-icons/fa';\nimport { FaGoogle, FaBing } from 'react-icons/fa';\nimport { SiDuckduckgo, SiBrave } from 'react-icons/si';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    \n    setLoading(true);\n    setError('');\n    setResults([]);\n    \n    try {\n      // First, get domain suggestions\n      const searchResponse = await axios.get(`http://localhost:5000/api/search?query=${encodeURIComponent(query)}`);\n      \n      if (searchResponse.data.results && searchResponse.data.results.length > 0) {\n        // Get the status of each domain\n        const domains = searchResponse.data.results.map(result => result.domain);\n        \n        // Create an array of promises for domain status checks\n        const statusPromises = domains.map(domain => \n          axios.get(`http://localhost:5000/api/status?domain=${encodeURIComponent(domain)}`)\n        );\n        \n        // Wait for all status checks to complete\n        const statusResponses = await Promise.all(statusPromises);\n        \n        // Combine results with status information\n        const combinedResults = searchResponse.data.results.map((result, index) => {\n          const statusData = statusResponses[index].data.status[0] || {};\n          return {\n            ...result,\n            status: statusData.status || '',\n            summary: statusData.summary || ''\n          };\n        });\n        \n        setResults(combinedResults);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to search domains. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDomainStatusClass = (summary) => {\n    if (!summary) return '';\n    if (summary === 'inactive') return 'available';\n    return 'unavailable';\n  };\n\n  const getDomainStatusText = (summary) => {\n    if (!summary) return 'Unknown';\n    if (summary === 'inactive') return 'Available';\n    return 'Unavailable';\n  };\n\n  // Función para construir las URLs de búsqueda para diferentes motores\n  const getSearchUrls = (domain) => {\n    const searchQuery = `comprar dominio ${domain}`;\n    return {\n      google: `https://www.google.com/search?q=${encodeURIComponent(searchQuery)}`,\n      bing: `https://www.bing.com/search?q=${encodeURIComponent(searchQuery)}`,\n      duckduckgo: `https://duckduckgo.com/?q=${encodeURIComponent(searchQuery)}`,\n      brave: `https://search.brave.com/search?q=${encodeURIComponent(searchQuery)}`\n    };\n  };\n\n  // Función para exportar resultados a un archivo TXT\n  const exportToTXT = () => {\n    if (!results.length) return;\n\n    let content = 'RESULTADOS DE BÚSQUEDA DE DOMINIOS\\n';\n    content += '==============================\\n\\n';\n    content += `Búsqueda: ${query}\\n`;\n    content += `Fecha: ${new Date().toLocaleString()}\\n\\n`;\n    content += 'DOMINIOS:\\n';\n    \n    results.forEach(result => {\n      content += `\\n- ${result.domain}`;\n      content += `\\n  Estado: ${getDomainStatusText(result.summary)}`;\n      content += '\\n';\n    });\n    \n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Función para exportar resultados a un archivo CSV\n  const exportToCSV = () => {\n    if (!results.length) return;\n\n    let content = 'Dominio,Estado,Tipo\\n';\n    \n    results.forEach(result => {\n      content += `${result.domain},${getDomainStatusText(result.summary)},${result.zone}\\n`;\n    });\n    \n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `dominios-${query.replace(/\\s+/g, '-')}-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Domain Checker</h1>\n        <p>Verifica la disponibilidad de dominios en tiempo real</p>\n      </div>\n      \n      <div className=\"domain-form\">\n        <form onSubmit={handleSearch}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Escribe un nombre o palabra clave...\"\n            />\n            <button type=\"submit\"><FaSearch /> Buscar</button>\n          </div>\n        </form>\n      </div>\n      \n      {loading && <div className=\"loading\">Buscando dominios...</div>}\n      \n      {error && <div className=\"error\">{error}</div>}\n      \n      {!loading && results.length > 0 && (\n        <>\n          <div className=\"export-buttons\">\n            <button onClick={exportToTXT} className=\"export-btn txt\">\n              <FaFileAlt /> Exportar TXT\n            </button>\n            <button onClick={exportToCSV} className=\"export-btn csv\">\n              <FaFileCsv /> Exportar CSV\n            </button>\n          </div>\n          <div className=\"results\">\n            {results.map((result, index) => (\n            <div \n              key={index} \n              className={`domain-item ${getDomainStatusClass(result.summary)}`}\n            >\n              <div className=\"domain-name\">{result.domain}</div>\n              <div className=\"domain-actions\">\n                <div className={`domain-status ${getDomainStatusClass(result.summary)}`}>\n                  {getDomainStatusText(result.summary)}\n                </div>\n                \n                {result.summary === 'inactive' && (\n                  <div className=\"search-buttons\">\n                    {Object.entries(getSearchUrls(result.domain)).map(([engine, url]) => (\n                      <a \n                        key={engine} \n                        href={url} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className={`search-button ${engine}`}\n                        title={`Buscar en ${engine.charAt(0).toUpperCase() + engine.slice(1)}`}\n                      >\n                        {engine === 'google' && <FaGoogle />}\n                        {engine === 'bing' && <FaBing />}\n                        {engine === 'duckduckgo' && <SiDuckduckgo />}\n                        {engine === 'brave' && <SiBrave />}\n                      </a>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        </>\n      )}\n      \n      <div className=\"powered-by\">\n        Powered by Domainr API\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}